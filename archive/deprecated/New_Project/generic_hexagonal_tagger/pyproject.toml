[tool.poetry]
name = "generic-hexagonal-tagger"
version = "0.1.0"
description = "A comprehensive system for analyzing and tagging code components within a hexagonal architecture framework"
authors = ["Generic Hexagonal Tagger Team <team@hexagonal-tagger.dev>"]
readme = "README.md"
packages = [{include = "generic_hexagonal_tagger"}]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.5.0"
py2neo = "^2021.2.4"
click = "^8.1.0"
rich = "^13.7.0"
loguru = "^0.7.2"
pyyaml = "^6.0.1"
openai = "^1.0.0"
anthropic = "^0.8.0"
tenacity = "^8.2.0"
networkx = "^3.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
black = "^23.12.0"
isort = "^5.13.0"
mypy = "^1.8.0"
flake8 = "^6.1.0"
pre-commit = "^3.6.0"

[tool.poetry.scripts]
hex-tagger = "generic_hexagonal_tagger.interfaces.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["generic_hexagonal_tagger"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
